<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:ib="resx://Xenon/Xenon.Resources/ItemButton"
    xmlns:xs="file://Xenon_Styles.mcml"
    xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:xi="resx://Xenon/Xenon.Resources/Images"
	  xmlns:bd="resx://Xenon/Xenon.Resources/Backdrop"
    xmlns:mpaa="resx://MediaBrowser/MediaBrowser.Resources/MPAARating"
    xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
    xmlns:anim="resx://Xenon/Xenon.Resources/Animations"
    xmlns:st="resx://Xenon/Xenon.Resources/AutoScrollableText"
    xmlns:sr="resx://Xenon/Xenon.Resources/StarRating"
    xmlns:lv="resx://Xenon/Xenon.Resources/LabelValue"
    xmlns:jil="resx://MediaBrowser/MediaBrowser.Resources/JilSelector"
    xmlns:xh="assembly://Xenon/Xenon"
    xmlns:me="me" >

  <UI Name="XenonLayoutThumbStrip">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" XenonHelper="$Required"/>
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <Timer Name="InfoTimer" AutoRepeat="false" Interval="400" Enabled="false"/>
      <cor:String Name="YearString" String="Year:"></cor:String>
      <cor:String Name="FirstAiredString" String="FirstAired:"></cor:String>
      <BooleanChoice Name="HasFocus" Value="false" />

      <ShortcutHandler Name="Blue" Shortcut="Blue" HandlerStage="Bubbled" Handle="true"/>
      <KeyHandler Name="JilKey" Key="J" Handle="true" Modifiers="Control" HandlerStage="Bubbled"/>
      <Command Name="HideJil"/>
    </Locals>

    <Rules>

      <Binding Target="[ThemeHelper.CurrentItem]" Source="[SelectedItem]" />
      <Binding Target="[Application.CurrentItem]" Source="[SelectedItem]" />

      <!-- JIL Command -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[JilKey.Invoked]"/>
          <Modified Source="[Blue.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="sound://sounds:Miniselect" />
          <Set Target="[JilPanel.Visible]" Value="true" />
          <Invoke Target="[JilPanel.NavigateInto]" />
        </Actions>
      </Rule>

      <Changed Source="[HideJil.Invoked]" >
        <Actions>
          <Set Target="[JilPanel.Visible]" Value="false" />
        </Actions>
      </Changed>
      
      <!-- Folder Pref Backdrop -->
      <Binding Target="[Backdrop.Image]" Source="[Folder.SelectedChild.BackdropImage]" />
      <Binding Target="[Backdrop.Item]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Backdrop.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdrop]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Backdrop Overlay-->
      <Binding Source="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Target="[Overlay.Alpha]" />
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      
      <Changed Source="[Folder.SelectedChildIndex]" InitialEvaluate="true">
        <Conditions>
          <Equality ConditionOp="NotEquals" Source="[Folder.SelectedChildIndex]" Value="-1"></Equality>
        </Conditions>
        <Actions>
          <Set Target="[InfoTimer.Enabled]" Value="true"/>
          <Invoke Target="[InfoTimer.Stop]" />
          <Invoke Target="[InfoTimer.Start]" />
        </Actions>
      </Changed>

      <Changed Source="[InfoTimer.Tick]">
        <Actions>
          <Set Target="[SelectedItem]" Value="[Folder.SelectedChild]" />
        </Actions>
      </Changed>

      <!--ITEM COUNTER-->
      <Binding Source="[Folder.SelectedChildIndex.ToString]" Target="[List_Counter.Content]" >
        <Transformer>
          <MathTransformer Add="1"/>
        </Transformer>
      </Binding>
      <Binding Source="[Folder.Children.Count]" Target="[List_Total.Content]" >
        <Transformer>
          <FormatTransformer Format="| {0}" />
        </Transformer>
      </Binding>
    
    
      <!-- ITEM INFO
     <Changed Source="[Input.DeepKeyFocus]">
       <Conditions>
         <Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="true" />
       </Conditions>
        <Actions>
          <Invoke Target="[ItemPanel.AttachAnimation]" animation="animation://anim:TSFocusGained" />
        </Actions>
      </Changed>-->
      
      <Binding Source="[Application.CurrentItem]" Target="[MediaInfoPanel.Item]" />
      <Binding Source="[SelectedItem.MpaaRating]" Target="[MPAARating.Value]" />
      <Binding Source="[SelectedItem.RunningTimeString]" Target="[SideInfo1.Value]" />
      <Binding Source="[SelectedItem.Status]" Target="[TVStatus.Value]" />
      <Binding Target="[Summary.Text]" Source="[SelectedItem.Overview]"></Binding>

      <!-- IMDB RATINGS VALUES -->
      <Binding Source="[SelectedItem.ImdbRating]" Target="[StarRating.Value]"></Binding>
      <Binding Source="[SelectedItem.ImdbRating]" Target="[StarRating.ImdbValue]"></Binding>
      <Binding Source="[SelectedItem.CriticRating]" Target="[StarRating.RTValue]" />
      <Binding Source="[SelectedItem.RottenTomatoImage]" Target="[StarRating.RTImage]" />

      <Default Value="Runs:" Target="[SideInfo1.Label]"></Default>
      
      <!--ITEM INFORMATION-->
      <!--Use Production Year-->
      <Binding Target="[SideInfo.Value]"     Source="[SelectedItem.ProductionYearString]">
        <Conditions>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
      </Binding>
      <Binding Target="[SideInfo.Label]" Source="[YearString]">
        <Conditions>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
      </Binding>
      <!--Use First Air-->
      <Binding Target="[SideInfo.Value]"     Source="[SelectedItem.FirstAired]">
        <Conditions>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="Equals" Value="Episode"/>
        </Conditions>
      </Binding>
      <Binding Target="[SideInfo.Label]"     Source="[FirstAiredString]">
        <Conditions>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="Equals" Value="Episode"/>
        </Conditions>
      </Binding>

      <!--TAGLINE TO UPPER CASE-->
      <Binding Source="[Folder.SelectedChild.TagLine]" Target="[TagLine.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      <Binding Source="[Folder.SelectedChild.TagLine]" Target="[TagLineShadow.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      

      <!--LOGO'S LOGIC
      <Binding Target="[Title.Content]"       Source="[SelectedItem.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[SelectedItem.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>-->

      <!-- Conditions for Title or Fanart views-->
      <Binding Source="[SelectedItem.Name]" Target="[Title.Content]" />
      <Binding Source="[SelectedItem.LogoImage]" Target="[LogoImage.Content]" />
      <Binding Source="[SelectedItem.ArtImage]" Target="[ClearArtImage.Content]" />
      <Binding Source="[SelectedItem.ThumbnailImage]" Target="[ThumbnailImage.Content]" />

      <!--Logos-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="Equals" Value="Song" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>
      
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[SelectedItem.HasLogoImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ClearArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[SelectedItem.HasArtImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[SelectedItem.HasArtImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ThumbNailArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[SelectedItem.HasThumbnailImage]" ConditionOp ="Equals" Value="True"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[SelectedItem.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[SelectedItem.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[ClearArtImage.Visible]" Value="false"/>
      <Default Target="[ThumbnailImage.Visible]" Value="false"/>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>
      <!--END BOTTOM BAR INFO-->

    </Rules>
    <Content>

      <Panel Layout="Form" Navigation="ContainHorizontal">
        <Children>

          <!--Jil Selector-->
          <Panel Name="JilPanel" Visible="false" Layout="Scale" Margins="150,0,150,20">
            <LayoutInput>
              <FormLayoutInput Bottom="Parent,1,0" />
            </LayoutInput>
            <Animations>
              <Animation Type="Show" >
                <Keyframes>
                  <AlphaKeyframe Time="0.0" Value="0" />
                  <AlphaKeyframe Time="0.4" Value="1" Interpolation="SCurve" />
                  <PositionKeyframe Time="0.0" Value="0,-50,0" />
                  <PositionKeyframe Time="0.4" Value="0,0,0" Interpolation="SCurve" />
                </Keyframes>
              </Animation>
            </Animations>
            <Children>
              <jil:JilSelector Name="JIL" Application="[Application]" Folder="[Folder]" LostFocus="[HideJil]" Margins="0,0,4,0"/>
            </Children>
          </Panel>
          
          <Panel Name="CounterPanel">
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-43" Bottom="Parent,1,0" Right="Parent,1,-25"/>
            </LayoutInput>
            <Children>
              <Panel Name="CounterPosition" Layout="HorizontalFlow">
                <Children>
                  <Text Name="List_Counter" Content="0" Color="color://xs:counterColor" Font="font://xs:counterFont" />
                  <Text Name="List_Total" Content="0" Color="color://xs:totalCounterColor" Font="font://xs:totalCounterFont"/>
                </Children>
              </Panel>
            </Children>
          </Panel>

          <me:CV2Scroller Name="CVItems" Application="[Application]" Folder="[Folder]" ThemeHelper="[ThemeHelper]">
            <LayoutInput>
              <AnchorLayoutInput Name="CVPosition" Top="Parent, 0.2" Left="Parent, 0.1" Right="Parent, 0.9" />
            </LayoutInput>
          </me:CV2Scroller>

          <Panel Layout="HorizontalFlow" Name="YearPanel" Visible="true">
            <LayoutInput>
              <AnchorLayoutInput Left="CVItems,0.13" Top="CVItems,1,40" />
            </LayoutInput>
            <Children>
              <lv:FinalLabelValue Name="SideInfo" Margins="0,0,10,0"></lv:FinalLabelValue>
              <lv:FinalLabelValue Name="SideInfo1" Margins="0,0,10,0"></lv:FinalLabelValue>
              <lv:FinalLabelValue Name="TVStatus"></lv:FinalLabelValue>
              <sr:StarRating Name="StarRating" Margins="20,-10,0,0" MaximumSize="0,40" ThemeHelper="[ThemeHelper]" />
            </Children>
          </Panel>

          <Clip Name="Divider" MaximumSize="750,0" ColorFilter="color://xs:ThumbDividerColor" >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0.2" Top="YearPanel,1,10" />
            </LayoutInput>
            <Children>
              <Graphic Name="DividerGlowLine" Content="image://xi:GlowLine"/>
            </Children>
          </Clip>

          <st:ScrollableText Name="Summary" Font="font://xs:OverviewFont" Color="color://xs:OverviewColor" MaximumSize="850,125">
            <LayoutInput>
              <AnchorLayoutInput Top="Divider,1,10" Left="Parent,0.2" />
            </LayoutInput>
          </st:ScrollableText>

          <Panel Name="ItemPanel" Layout="VerticalFlow" Visible="true">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0.21" Top="Parent,0,75" />
            </LayoutInput>
            <Children>
              <Text Name="Title" Content="[SelectedItem.Name]" Font="font://xs:BottomBarTitleFont" Color="color://xs:BottomBarTitleColor" Visible="false"/>
              <Graphic Name="LogoImage" Margins="0,0,0,0" MaintainAspectRatio="true" MaximumSize="175,50" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
              <Graphic Name="ClearArtImage" Margins="0,0,0,0" MaintainAspectRatio="true" MaximumSize="175,50" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
              <Graphic Name="ThumbnailImage" Margins="0,0,0,0" MaintainAspectRatio="true" MaximumSize="175,50" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
            </Children>
          </Panel>

          <Panel Name="MPAARatingPanel" > 
            <LayoutInput>
              <AnchorLayoutInput Right="Parent,1,-100" Bottom="Parent,1,-10" />
            </LayoutInput>
            <Children>
              <mpaa:MPAARating MaximumSize="65,55" Name="MPAARating" Visible="true"/>
            </Children>
          </Panel>

          <Panel Name="MediaInfo" >
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0.2" Top="Summary,1,10" />
            </LayoutInput>
            <Children>
              <mip:MediaInfoPanel Name="MediaInfoPanel" Item="[SelectedItem]" MaximumSize="0,35" />
            </Children>
          </Panel>

          <Panel Name="TaglinePanel" Navigation="None" >
            <LayoutInput>
              <FormLayoutInput Horizontal="Center" Top="Parent,0,5" />
            </LayoutInput>
            <Children>
              <Text Name ="TagLine" Font="font://xs:ThumbStripTagLineFont" Color="color://xs:ThumbStripTaglineColor" />
            </Children>
          </Panel>
          <Panel Name="TaglinePanelShadow" Navigation="None" >
            <LayoutInput>
              <FormLayoutInput Horizontal="Center" Top="Parent,0,7" Left="Parent,0,2" />
            </LayoutInput>
            <Children>
              <Text Name ="TagLineShadow" Font="font://xs:ThumbStripShadowTagLineFont" Color="color://xs:ThumbStripShadowTaglineColor" />
            </Children>
          </Panel>

          <ColorFill Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Content="Black" />
          <bd:NowPlayingBackdrop Name="NowPlayingBackdrop" Application="[Application]"/>
          <bd:Backdrop4 LoadDelay="280" FadeTime="[ThemeHelper.Config.BackdropTransitionTime]"  Application="[Application]" Name="Backdrop" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.BackdropImage]" Item="[SelectedItem]"/>

        </Children>
      </Panel>
    </Content>
  </UI>


  <UI Name="CV2Scroller">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" XenonHelper="$Required" />
    </Properties>

    <Locals>
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="false" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="SD" LockedAlignment="0.15" LockedPosition="0.15" />
      <IntRangedValue Name="SelectRepeaterIndex"/>

      <!-- PageUp/PageDown Jumps -->
      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true"/>
      <ShortcutHandler Name="JumpBack"    Shortcut="SkipBack"    HandlerStage="Bubbled" Handle="true"/>

      <!-- Repeater Layout -->
      <FlowLayout Name="CoverLayout" Orientation="Horizontal" AllowWrap="true" Spacing="50,50" RepeatGap="150,0"  />
      <IntRangedValue Name="NavCount" Value="0" />

      <cor:Int32 Name="NormalKeyRepeat" Int32="20"/>
      <!-- This must be less than anim delay -->
      <cor:Int32 Name="FastKeyRepeat" Int32="10"/>
      <cor:Int32 Name="AnimDelay" Int32="30" />
      <!-- This must be greater than NormalKeyRepeat-->
      <cor:Int32 Name="SpeedUpDelay" Int32="2"/>
      
      <cor:Int32 Name="backFocus" Int32="[Folder.SelectedChildIndex]" />
    </Locals>

    <Rules>

      <!-- WRAP EHS VF LIST LOGIC -->
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Always" Target="[CoverLayout.Repeat]" Value="Always" />
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Never" Target="[CoverLayout.Repeat]" Value="Never" />
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="When Too Big" Target="[CoverLayout.Repeat]" Value="WhenTooBig" />

      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[SD.PageUp]"/>
        </Actions>
      </Rule>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[SD.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[SD]"/>
      <Default Target="[SD.Repeater]" Value="[CoverRepeater]"/>
      <Binding Source="[CoverLayout]" Target="[CoverRepeater.Layout]"/>

      <!-- Update cover repeater on items change. -->
      <Changed Source="[Folder.Children]">
        <Actions>
          <Set Target="[CoverRepeater.Source]" Value="[Folder.Children]" />
          <Set  Target="[Folder.SelectedChildIndex]" Value="-1"/>
        </Actions>
      </Changed>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[CoverRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>
    </Rules>

    <Content>
      <Scroller Orientation="Horizontal" Name="Scroller" Navigation="RememberFocus,ContainHorizontal" ScrollingData="[SD]"
                CenterPointPercent="0.0,0.5,1.0" Rotation="0deg;0,0,0">
        <Children>
          <Repeater Source="[Folder.Children]" Name="CoverRepeater" DiscardOffscreenVisuals="false" Layout="[CoverLayout]" >
            <Animations>
              <Animation Type="Move">
                <Keyframes>
                  <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                  <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                </Keyframes>
              </Animation>
            </Animations>
            <Content>
              <me:CoverFlowItem
                    Application="[Application]"
                    ParentItem="[Folder]"
                    ItemIndex="[RepeatedItemIndex]"
                    Item="[RepeatedItem!lib:Item]"
                    SelectRepeaterIndex="[SelectRepeaterIndex]"
                    ImageSize="[Folder.ActualThumbSize]"
                    AnimDelay="[AnimDelay]" NavCount="[NavCount]"
                    UnwatchedCountFont="font://f:CV_UnwatchedCountFont"
                    ShowLabels="[Folder.DisplayPrefs.ShowLabels]"
                    TopLabelFont="font://f:CV_PosterTopLabelFont"
                    ThemeHelper="[ThemeHelper]"/>
            </Content>
          </Repeater>
        </Children>
      </Scroller>
    </Content>
  </UI>

  <UI Name="CoverFlowItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
      <lib:Item Name="Item" Item="$Required" />
      <Image Name="FolderImage" Image="image://i:Folder"/>
      <Image Name="BlankImage" Image="null"/>
      <BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
      <Image Name="Image" />
      <cor:Int32 Name="AnimDelay" Int32="1000" />
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <Index Name="ItemIndex" Index="$Required"/>
      <Rotation Name="RRotate" Rotation="0deg;0,1,0"/>
      <Rotation Name="LRotate" Rotation="0deg;0,1,0"/>
      <IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
      <Font Name="UnwatchedCountFont" Font="$Required"/>
      <Font Name="TopLabelFont" Font="$Required"/>
      <Vector3 Name="WatchedFocusedScale" Vector3=".75,.75,.75"/>
      <Vector3 Name="WatchedUnfocusedScale" Vector3="1,1,1"/>
      <cor:String Name="CurrentImagePath" String="" />
      
    </Properties>

    <Locals>
      <Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
      <AnchorLayoutInput Name="WatchedUnfocusedLayout" Right="Parent,1" Left="Parent,1,-50" Bottom="Parent,1" Top="Parent,1,-50"/>
      <AnchorLayoutInput Name="WatchedFocusedLayout" Right="Parent,1" Left="Parent,1,-35" Bottom="Parent,1" Top="Parent,1,-35"/>
    </Locals>

    <Rules>

      <!-- Set the UI to be mouse and keyboard interactive. -->
      <Default Target="[Input.KeyInteractive]" Value="true"/>
      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

      <!-- DON'T ALLOW BANNERS, AND IF THEY ARE SET TO BE USED FROM ANOTHER THEME, SET TO FALSE-->
      <Changed Source="[ParentItem.DisplayPrefs.UseBanner.Value]" InitialEvaluate="true"   >
        <Conditions>
          <Equality Source="[ParentItem.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[ParentItem.DisplayPrefs.UseBanner.Value]" Value= "false"/>
        </Actions>
      </Changed>

      <!--Condition Source="[Application.Config.HideFocusFrame]" ConditionOp="Equals" SourceValue="true" Target="[Border.Visible]" Value="false" /-->

      <Binding Source="[ImageSize.Value]" Target="[Item.PreferredImageSmallSize]" />
      <Binding Source="[ImageSize.Value]" Target="[IndicatorPanel.MaximumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[IndicatorPanel.MinimumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[BelowLabelPanel.MaximumSize]" />

      <!-- Selected state, true if item last had focus -->
      <Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="Equals" SourceValue="[ItemIndex.SourceValue]">
        <Actions>
          <Set Target="[IndicatorPanel.ColorFilter]" Value="White" />
          <Set Target="[IndicatorPanel.Alpha]" Value="1" />
          <Set Target="[UnwatchedIndicator.Scale]" Value="[WatchedFocusedScale]" />
          <Set Target="[TickIndicatorPanel.Scale]" Value="[WatchedFocusedScale]" />
          <Set Target="[TickIndicatorPanel.Scale]" Value="[WatchedFocusedScale]" />
        </Actions>
      </Condition>

      <Condition Source="[InFocus.Value]" SourceValue="true">
        <Actions>
          <Set Target="[MainArt.Alpha]" Value="1"/>
          <Set Target="[MainArt.Content]" Value="[Item.PreferredImage]"/>
        </Actions>
      </Condition>

      <Changed Source="[Item.PreferredImage]">
        <Conditions>
          <Equality  Source="[InFocus.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[MainArt.Content]" Value="[Item.PreferredImage]"/>
        </Actions>

      </Changed>
      <Binding Target="[MainArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>
      <Condition Source="[InFocus.Value]" SourceValue="false">
        <Actions>
          <Set Target="[MainArt.Content]" Value="[Item.PreferredImageSmall]"/>
        </Actions>
      </Condition>

      <Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" SourceValue="[ItemIndex.SourceValue]">
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
        </Actions>
      </Condition>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Main.Scale]" Value="1.2,1.2,1"/>
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[ItemIndex.SourceValue]"/>
          <Set Target="[SelectRepeaterIndex.Value]" Value="[ItemIndex.Value]"/>
          <Invoke Target="[AnimTimer.Start]" />
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>

      <Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="LessThanOrEquals" SourceValue="[ItemIndex.Value]" Target="[Main.Alpha]" Value="1" />
      <Condition Source="[SelectRepeaterIndex.Value]" ConditionOp="GreaterThan" SourceValue="[ItemIndex.Value]" Target="[Main.Alpha]" Value="1" />

      <!-- Focus and non-focused states. -->
      <Condition Source="[Input.KeyFocus]" ConditionOp="Equals" SourceValue="false">
        <Actions>
          <Set Target="[MainArt.Content]" Value="[Item.PreferredImage]" />
          <Set Target="[Main.Scale]" Value="1,1,1"/>
        </Actions>
      </Condition>

      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[IndicatorPanel.ColorFilter]" Value="White" />
      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[IndicatorPanel.Alpha]" Value="1" />

      <Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />

      <Binding Source="[Item.Name]" Target="[BelowLabelPanel.Content]" />

      <!--Poster (un)Watched/HD/Count/New Icons-->
      <Binding Source="[Item.IsHD]" Target="[HDIndicator.Visible]"  ConditionLogicalOp="And"  >
        <Conditions>
          <Equality Source="[Application.Config.ShowHDIndicatorOnPosters]" Value="true" />
        </Conditions>
      </Binding>
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="720" Target="[HDImage.Content]" Value="image://i:HDLogo720" />
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="1080" Target="[HDImage.Content]" Value="image://i:HDLogo1080" />
      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
      <Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
      <Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />
      <Binding Source="[Item.IsMissing]" Target="[MissingIndicator.Visible]" />
      <Binding Source="[Item.IsFuture]" Target="[FutureIndicator.Visible]" />

      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>

      <Changed Source="[Item.ShowUnwatched]">
        <Actions>
          <Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
        </Actions>
      </Changed>
    </Rules>

    <Content>

      <Graphic Name="Main" Content="[BlankImage]" CenterPointPercent="0.5,1,0.5" Margins="-30,0,-30,0">
        <Layout>
          <AnchorLayout SizeToVerticalChildren="true"/>
          <!--<FlowLayout Orientation="Vertical" Spacing="0,-5"/>-->
        </Layout>
        <Children>
          <!-- Focus Outline-->
          <Graphic Name="FocusBg" Content="[BlankImage]" Padding="5,5,5,5" SizingPolicy="SizeToChildren" Layout="VerticalFlow">
            <Children>

              <Panel Name="IndicatorPanel" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" MinimumSize="[ImageSize.Value]" ColorFilter="150,150,150" >
                <Layout>
                  <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
                </Layout>
                
                <Children>

                  <!--<Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Item.HaveWatched]" MaximumSize="32,32"  >
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Near" />
                    </LayoutInput>
                    <Children>
                      <Panel Name="TickPanel" Layout="Center">
                        <Children>
                          <Graphic Content="image://i:TickPoster"  MaximumSize="30,30"  />
                          <Graphic Content="image://i:TickPosterBase" ColorFilter="color://xs:XC_WatchedBG" MaximumSize="30,30" Visible="global://s:ShowWatchedMarkerBackgrounds"  />
                        </Children>
                      </Panel>
                    </Children>
                  </Panel>-->
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Application.Config.ShowWatchTickInPosterView]" MaximumSize="42,42" Margins="5,5,0,0">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Panel Name="TickPanel" Layout="Center">
                        <Children>
                          <Graphic Content="image://i:Watched"  MaximumSize="40,40"  />
                        </Children>
                      </Panel>
                    </Children>
                  </Panel>

                  <Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="42,42" >
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,0,0"></Text>
                      <Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" Content="image://i:GreenCircle"  MinimumSize="40,40" MaximumSize="40,40" MaintainAspectRatio="true" Layout="Center" ></Graphic>
                    </Children>
                  </Panel>
                  
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="HDIndicator" >
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="HDImage" Content="image://i:HDLogo" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="MissingIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FutureIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Graphic Name="RemoteContentImage" Content="resx://MediaBrowser/MediaBrowser.Resources/IconRemote" Margins="0,0,5,5" Alpha=".75" MaximumSize="30,30" MaintainAspectRatio="true" Visible="false">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                    </LayoutInput>
                  </Graphic>

                  <Clip Orientation="Horizontal" FadeSize="1" >
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent,0,-1" Right="Parent,1,1" Vertical="Fill"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="MainArt" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" Content="[Item.PreferredImageSmall]" />
                    </Children>
                  </Clip>
                </Children>
              </Panel>

              <Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="1" Color="color://xs:PosterTitleColor"  Font="[TopLabelFont]"
                    Content="[Item.Name]" MaximumLines="2" WordWrap="true" HorizontalAlignment="Near" MinimumSize="0,60"></Text>
            </Children>
          </Graphic>
        </Children>

        <Animations>
          <Animation Type="Scale" CenterPointPercent="0.5,0.5,0.5">
            <Keyframes>
              <ScaleKeyframe Time="0" RelativeTo="Current" Interpolation="Log"/>
              <ScaleKeyframe Time="0.35" RelativeTo="Final"/>
            </Keyframes>
          </Animation>
        </Animations>
      </Graphic>


    </Content>
  </UI>
</Mcml>
