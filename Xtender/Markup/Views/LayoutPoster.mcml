<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:a="assembly://MediaBrowser/MediaBrowser"
	  xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:fs="resx://MediaBrowser/MediaBrowser.Resources/FocusSelector"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
      xmlns:in="resx://MediaBrowser/MediaBrowser.Resources/InfoMarquee"
	  xmlns:cor="assembly://MSCorLib/System"
    xmlns:ps="resx://Xenon/Xenon.Resources/PosterScroller"
    xmlns:bd="resx://Xenon/Xenon.Resources/Backdrop"
    xmlns:s="file://Styles_DoNotEdit.mcml"
    xmlns:xs="file://Xenon_Styles.mcml"
    xmlns:xh="assembly://Xenon/Xenon"
    xmlns:it="resx://Xenon/Xenon.Resources/Images"
    xmlns:st="resx://Xenon/Xenon.Resources/AutoScrollableText"
    xmlns:mqt="resx://Xenon/Xenon.Resources/MarqueeText"
    xmlns:mpaa="resx://MediaBrowser/MediaBrowser.Resources/MPAARating"
    xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
    xmlns:jil="resx://MediaBrowser/MediaBrowser.Resources/JilSelector"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:sr="resx://Xenon/Xenon.Resources/StarRating"
    xmlns:lv="resx://Xenon/Xenon.Resources/LabelValue"
    xmlns:ib="resx://Xenon/Xenon.Resources/ItemButton"
    xmlns:me="Me">

  <UI Name="XenonLayoutPoster">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" XenonHelper="$Required" />
    </Properties>

    <Locals>
      <Timer AutoRepeat="false" Enabled="true" Interval="2000" Name="InfoTimer" />
      <lib:Item Name="Item" />
      <Command Name="FocusGained" />

      <ShortcutHandler Name="Blue" Shortcut="Blue" HandlerStage="Bubbled" Handle="true"/>
      <KeyHandler Name="JilKey" Key="J" Handle="true" Modifiers="Control" HandlerStage="Bubbled"/>
      <Command Name="HideJil"/>
    </Locals>

    <Rules>
      <!-- Set Folder Config Context -->
      <!-- IMPORTANT: There are timing issues using Folder.ActualThumbSize when the folder's display prefs haven't been loaded
                            yet.  So call LoadDisplayPrefs early and synchronously to ensure that all is initialized properly. 
      <Rule>
        <Actions>
          <Invoke Target="[ThemeHelper.GetFolderPrefsId]" folder="[Folder.PhysicalParent]" ResultTarget="[ThemeHelper.Config.ParentFolderId]" InvokePolicy="Synchronous" ExclusiveApply="false" />
          <Invoke Target="[ThemeHelper.GetFolderPrefsId]" folder="[Folder]" ResultTarget="[ThemeHelper.Config.FolderId]" InvokePolicy="Synchronous" ExclusiveApply="false" />
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[Folder]" InvokePolicy="Synchronous" />
        </Actions>
      </Rule>
      <Binding Source="[Folder]" Target="[ThemeHelper.CurrentParent]" />-->

      <Binding Target="[ThemeHelper.CurrentItem]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Application.CurrentItem]" Source="[Folder.SelectedChild]" />


      <!--Force focus to scroller-->
      <Changed Source="[InfoTimer.Tick]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.IsMenuOpen]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyItems.NavigateInto]"></Invoke>
        </Actions>
      </Changed>

      <!-- JIL Command -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[JilKey.Invoked]"/>
          <Modified Source="[Blue.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="sound://sounds:Miniselect" />
          <Set Target="[JilPanel.Visible]" Value="true" />
          <Invoke Target="[JilPanel.NavigateInto]" />
        </Actions>
      </Rule>

      <Changed Source="[HideJil.Invoked]" >
        <Actions>
          <Set Target="[JilPanel.Visible]" Value="false" />
        </Actions>
      </Changed>

      <!--BottomBar Visibility Options-->
      <Binding Source="[ThemeHelper.Config.FolderShowBottomInfoBar]" Target="[MiniInfoPanel.Visible]" />

      <!-- Backdrop-->
      <Binding Target="[Backdrop.Image]" Source="[Folder.SelectedChild.BackdropImage]" />
      <Binding Target="[Backdrop.Item]" Source="[Folder.SelectedChild]" />
      <Binding Target="[Backdrop.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdrop]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <!-- Backdrop Overlay-->
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <Binding Target ="[Overlay.Alpha]" Source="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" />

      <Binding Target="[Summary.Text]" Source="[Folder.SelectedChild.Overview]" />
      <Binding Target="[Summary.Visible]" Source="[ThemeHelper.ShowOverview]" />

      <Changed Source="[Input.KeyFocus]">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Application.CurrentItem]" Value="[Item]" />
          <Invoke Target="[FocusGained.Invoke]"></Invoke>
        </Actions>
      </Changed>

      <!--PROGRESSBAR-->
      <!--Changed Source="[ThemeHelper.CurrentItem]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[ThemeHelper.PercentWatched]" ConditionOp="GreaterThan"  Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[ProgressBar.PercentWatched]" Value="[ThemeHelper.PercentWatched]"/>
          <Set Target="[ProgressBar.Visible]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[ThemeHelper.CurrentItem]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[ThemeHelper.PercentWatched]" ConditionOp="LessThan" Value="1"/>
        </Conditions>
        <Actions>
          <Set Target="[ProgressBar.Visible]" Value="false" />
        </Actions>
      </Changed-->

      <!--ITEM INFORMATION-->
      <Binding Source="[Folder.SelectedChild.TagLine]" Target="[TagLine.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      <Binding Source="[Folder.SelectedChild.TagLine]" Target="[TagLineShadow.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>

      <!--Use Production Year-->
      <Binding Target="[ProdYear.Value]"     Source="[Folder.SelectedChild.ProductionYearString]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
      </Binding>
      <!--Use First Air-->
      <Binding Target="[ProdYear.Value]"     Source="[Folder.SelectedChild.FirstAired]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Episode"/>
        </Conditions>
      </Binding>
      <Default Value=" Year:" Target="[ProdYear.Label]" />

      <Binding Source="[Folder.SelectedChild.RunningTimeString]" Target="[Runtime.Value]" />
      <Default Value="Runtime:" Target="[Runtime.Label]" />

      <!--LOGO'S LOGIC-->
      <Binding Target="[Title.Content]"       Source="[Folder.SelectedChild.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[Folder.SelectedChild.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>

      <!--MINI INFO PANEL-->
      <Binding Source="[Folder.SelectedChild.MpaaRating]" Target="[mpaa.Value]" />
      <Binding Source="[Folder.SelectedChild.Status]" Target="[TVStatus.Value]" />
      <Binding Source="[ThemeHelper.CurrentItem]" Target="[MediaInfoPanel.Item]" />

      <!-- IMDB RATINGS VALUES -->
      <Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.Value]"></Binding>
      <Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.ImdbValue]"></Binding>
      <Binding Source="[Folder.SelectedChild.CriticRating]" Target="[StarRating.RTValue]" />
      <Binding Source="[Folder.SelectedChild.RottenTomatoImage]" Target="[StarRating.RTImage]" />
    </Rules>


    <Content>
      <Panel Layout="Form" >
        <Children>

          <!--Jil Selector-->
          <Panel Name="JilPanel" Visible="false" Layout="Scale" Margins="150,0,150,20">
            <LayoutInput>
              <FormLayoutInput Bottom="Parent,1,0" />
            </LayoutInput>
            <Animations>
              <Animation Type="Show" >
                <Keyframes>
                  <AlphaKeyframe Time="0.0" Value="0" />
                  <AlphaKeyframe Time="0.4" Value="1" Interpolation="SCurve" />
                  <PositionKeyframe Time="0.0" Value="0,-50,0" />
                  <PositionKeyframe Time="0.4" Value="0,0,0" Interpolation="SCurve" />
                </Keyframes>
              </Animation>
            </Animations>
            <Children>
              <jil:JilSelector Name="JIL" Application="[Application]" Folder="[Folder]" LostFocus="[HideJil]" Margins="0,0,4,0"/>
            </Children>
          </Panel>

          <Panel Name="TaglinePanel" >
            <LayoutInput>
              <FormLayoutInput Horizontal="Center" Bottom="Parent,1,-10" />
            </LayoutInput>
            <Children>
              <Text Name ="TagLine" Font="font://xs:PosterTagLineFont" Color="color://xs:PosterTaglineColor" />
            </Children>
          </Panel>
          <Panel Name="TaglinePanelShadow" >
            <LayoutInput>
              <FormLayoutInput Horizontal="Center" Bottom="Parent,1,-8" Left="Parent,0,2" />
            </LayoutInput>
            <Children>
              <Text Name ="TagLineShadow" Font="font://xs:PosterShadowTagLineFont" Color="color://xs:PosterShadowTaglineColor" />
            </Children>
          </Panel>

          <!--Post Scroller-->
          <Panel Name="PosterScroller" FocusOrder="1" Rotation="-20deg;-0.4,1,0" CenterPointPercent="0.5,0.5,0.5" >
            <LayoutInput>
              <FormLayoutInput Left="Parent,0,-10" Right="Parent,1,-280" Vertical="Center"  />
            </LayoutInput>
            <Children>
              <me:PosterScroller Name="MyItems" Application="[Application]" Folder="[Folder]" TopLabelFont="font://xs:PosterSmallFont" LabelFont="font://xs:PosterSmallFont" UnwatchedCountFont="font://xs:UnwatchedCountFont"/>
            </Children>
          </Panel>

          <Clip Name="ItemInfoPanel"  >
            <Layout>
              <FlowLayout Orientation="Vertical" />
            </Layout>
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,1,-325" Top="Parent,0.2" Right="Parent,1" Bottom="Parent,0.8"/>
            </LayoutInput>
            <Children>
              <Panel Name="ItemPanel" Visible="true">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Top="Parent,0" />
                </LayoutInput>
                <Children>
                  <mqt:MarqueeText Name="Title" Font="font://xs:PosterTitleFont" Color="color://xs:PosterTitleColor" Visible="false"/>
                  <Graphic Name="LogoImage" Margins="0,5,5,15" MaintainAspectRatio="true" MaximumSize="0,75" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                </Children>
              </Panel>

              <Panel Name="YearPanel" Layout="HorizontalFlow" >
                <Children>
                  <lv:FinalLabelValue Name="ProdYear" Margins="0,0,0,0" />
                  <lv:FinalLabelValue Name="Runtime" Margins="5,0,0,0" />
                </Children>
              </Panel>

              <Clip Name="Divider" MaximumSize="350,0" Visible="true" ColorFilter="color://xs:ThumbDividerColor" >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Top="Parent,0" />
                </LayoutInput>
                <Children>
                  <Graphic Name="DividerGlowLine" Content="image://it:GlowLine"/>
                </Children>
              </Clip>

              <st:ScrollableText Name="Summary" Font="font://xs:PosterOverviewFont" Color="color://xs:PosterOverviewTextColor">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Top="Parent,0" Right="Parent,1" />
                </LayoutInput>
              </st:ScrollableText>
            </Children>
          </Clip>

          <Panel Name="MiniInfoPanel" Layout="VerticalFlow">
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Center" Left="ItemInfoPanel,0" Bottom="Parent,1,-25" />
            </LayoutInput>
            <Children>

              <lv:BBarLabelValue Name="TVStatus" MaximumSize="0,55" Layout="Center" />

              <Panel Name="MPAAStar" Layout="HorizontalFlow" Margins="0,0,0,10" >
                <Layout>
                  <FlowLayout StripAlignment="Center"/>
                </Layout>
                <Children>
                  <sr:StarRating MaximumSize="0,40" Name="StarRating" Margins="0,0,15,0"  ThemeHelper="[ThemeHelper]"/>
                  <mpaa:MPAARating MaximumSize="45,35" Name="mpaa" Visible="true" />
                </Children>
              </Panel>

              <mip:MediaInfoPanel Name="MediaInfoPanel" Item="[Item]" MaximumSize="0,35" Layout="Center"/>


              <!--<Clip Name="BottomBarGraphic" ColorFilter="color://xs:BottomBarColorOverlay" >
            <LayoutInput>
              <FormLayoutInput Left="Parent,0" Right="Parent,1" Bottom="Parent,1,5" Horizontal="Fill" />
            </LayoutInput>
            <Children>
              <Graphic Name="BottomBar" Content="image://vi:BottomBar" MaximumSize="0,80" MaintainAspectRatio="true" />
            </Children>
          </Clip>-->

            </Children>
          </Panel>

          <!-- Welcome to MB & Update Info Panel-->
          <Panel Name="MBInfo" Alpha="0.7" >
            <Layout>
              <FlowLayout ItemAlignment="Near"/>
            </Layout>
            <LayoutInput>
              <FormLayoutInput Top="Parent,0.95" Left="Parent,0,-20" />
            </LayoutInput>
            <Children>
              <in:InfoMarquee Application="[Application]" />
            </Children>
          </Panel>

          <ColorFill Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="[ThemeHelper.Config.FolderBackdropOverlayAlpha]" Content="Black" />
          <bd:NowPlayingBackdrop Name="NowPlayingBackdrop" Application="[Application]"/>
          <bd:Backdrop4 Name="Backdrop"  Application="[Application]" LoadDelay="90" FadeTime="[ThemeHelper.Config.BackdropTransitionTime]" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.SelectedChild.BackdropImage]" Item="[Folder.SelectedChild]"/>

        </Children>
      </Panel>
    </Content>
  </UI>

  <UI Name="PosterScroller">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" />
      <cor:Int32 Name="RowLimit"  />
      <cor:Boolean Name="NoEndPadding" Boolean="false" />
      <Font Name="TopLabelFont" Font="$Required"/>
      <Font Name="LabelFont" Font="$Required"/>
      <Font Name="UnwatchedCountFont" Font="$Required"/>
      <cor:Boolean Name="CenterFocus" Boolean="false" />
      <xh:XenonHelper Name="ThemeHelper"/>
    </Properties>
    <Locals>
      <!-- Use the MouseWheel handler to handle the mouse wheel.  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="ScrollingHandler"/>
      <ScrollingData Name="VScrollingData" EndPadding="20" BeginPadding="20" LockedAlignment="0.5" LockedPosition="0.5" />
      <ScrollingData Name="HScrollingData" EndPadding="20" BeginPadding="20" LockedAlignment="0.5" LockedPosition="0.5" />
      <ScrollingData Name="CenterScollingData" LockedAlignment="0.5" LockedPosition="0.5" />
      <ScrollingData Name="ScrollingData" />
      <Environment Name="Environment" />

      <GridLayout Name="MyLayout" Repeat="Never" RepeatGap="150" Orientation="Vertical" Rows="[RowLimit]" Columns="0" AllowWrap="true" Spacing="[Application.Config.GridSpacing]" MinorAlignment="Center" MajorAlignment="Center" />

      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>
      <IntRangedValue Name="NavCount" Value="0" />

      <cor:Int32 Name="NormalKeyRepeat" Int32="20"/>
      <!-- This must be less than anim delay -->

      <cor:Int32 Name="FastKeyRepeat" Int32="10"/>

      <cor:Int32 Name="AnimDelay" Int32="30" />
      <!-- This must be greater than NormalKeyRepeat-->

      <cor:Int32 Name="SpeedUpDelay" Int32="7"/>
      <!--The number of items to got across at normal speed before speeding up -->
      <FormLayoutInput Name="HLayout" Horizontal="Fill" Vertical="Center"/>
      <FormLayoutInput Name="VLayout" Horizontal="Center" Vertical="Fill"/>
    </Locals>


    <Rules>
      <Binding Source="[Folder.ReferenceSize]" Target="[MyLayout.ReferenceSize]"/>

      <Condition Source="[NoEndPadding]" ConditionOp="Equals" SourceValue="true">
        <Actions>
          <Set Target="[HScrollingData.EndPadding]" Value="30" />
          <Set Target="[HScrollingData.BeginPadding]" Value="30" />
        </Actions>
      </Condition>
      <Condition Source="[Folder.DisplayPrefs.VerticalScroll.Value]" SourceValue="true">
        <Actions>
          <Set Target="[Scroller.Orientation]" Value="Vertical" />
          <Set Target="[Scroller.Navigation]" Value="ContainVertical" />
          <Set Target="[MyLayout.Orientation]" Value="Horizontal" />
          <Set Target="[MyLayout.Rows]" Value="0" />
          <Set Target="[ItemPanel.Padding]" Value="0,0,0,0" />
          <Set Target="[Scroller.LayoutInput]" Value="[VLayout]" />
          <Set Target="[MyLayout.Repeat]" Value="WhenTooBig" />
          <Set Target="[MyLayout.RepeatGap]" Value="[Application.Config.GridSpacing.Height]" />
          <Set Target="[ScrollingData]" Value="[VScrollingData]" />
        </Actions>
      </Condition>
      <Condition Source="[Folder.DisplayPrefs.VerticalScroll.Value]" SourceValue="false">
        <Actions>
          <Set Target="[Scroller.Orientation]" Value="Horizontal" />
          <Set Target="[Scroller.Navigation]" Value="ContainHorizontal" />
          <Set Target="[MyLayout.Orientation]" Value="Vertical" />
          <Set Target="[MyLayout.Rows]" Value="[RowLimit]" />
          <Set Target="[ItemPanel.Padding]" Value="0,0,0,0" />
          <Set Target="[Scroller.LayoutInput]" Value="[HLayout]" />
          <Set Target="[MyLayout.Repeat]" Value="WhenTooBig" />
          <Set Target="[MyLayout.RepeatGap]" Value="[Application.Config.GridSpacing.Height]" />
        </Actions>
      </Condition>

      <Changed Source="[Folder.DisplayPrefs.VerticalScroll.Value]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Folder.DisplayPrefs.VerticalScroll.Value]" Value="false" />
          <Equality Source="[CenterFocus]"  Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData]" Value="[HScrollingData]" />
        </Actions>
      </Changed>

      <Changed Source="[Folder.DisplayPrefs.VerticalScroll.Value]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Folder.DisplayPrefs.VerticalScroll.Value]" Value="false" />
          <Equality Source="[CenterFocus]"  Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData]" Value="[CenterScollingData]" />
        </Actions>
      </Changed>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.Children.Count]" ConditionOp="LessThanOrEquals"  Value="4"/>
          <Equality Source="[Folder.DisplayPrefs.VerticalScroll.Value]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[MyLayout.Rows]" Value="1" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan"  Value="4"/>
          <Equality Source="[Folder.DisplayPrefs.VerticalScroll.Value]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[MyLayout.Rows]" Value="[RowLimit]" />
        </Actions>
      </Rule>


      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollingData.PageUp]"/>
        </Actions>
      </Rule>



      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0" />
        </Conditions>
        <Actions>
          <Invoke Target="[MyRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[ScrollingData.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>

      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="[SpeedUpDelay]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[FastKeyRepeat]" />
        </Actions>
      </Changed>

      <Changed Source="[NavCount.Value]">
        <Conditions>
          <Equality Source="[NavCount.Value]" ConditionOp="Equals" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[Scroller]" val="[NormalKeyRepeat]" />
        </Actions>
      </Changed>

      <!-- Give ScrollingData to ScrollingHandler. -->
      <Binding Target="[ScrollingHandler.ScrollingData]" Source="[ScrollingData]"/>
      <Binding Target="[Scroller.ScrollingData]" Source="[ScrollingData]" />
      <!-- Give Repeater to ScrollingData. -->
      <Default Target="[ScrollingData.Repeater]" Value="[MyRepeater]"/>
      <Binding Target="[FocusRect.Scaling]" Source="[Folder.PosterZoom]" />
      <Binding Target="[MyRepeater.Source]" Source="[Folder.Children]" />

      <!-- Hide focus frame image -->
      <Condition Source="[Application.Config.HideFocusFrame]" ConditionOp="Equals" SourceValue="true" Target="[FocusRect.FocusImage]" Value="image://i:BlankImage" />
    </Rules>

    <Content>
      <Panel Name="ItemPanel" Layout="Form" Navigation="none" >
        <Children>

          <fs:FocusSelector Name="FocusRect">
            <LayoutInput>
              <FormLayoutInput Left="Focus,0,-3" Right="Focus,1,3" Top="Focus,0,-3" Bottom="Focus,1,3" ContributesToHeight="false" ContributesToWidth="false"/>
            </LayoutInput>
          </fs:FocusSelector>

          <Scroller Orientation="Horizontal"  FadeSize="50" Name="Scroller"  ScrollingData="[ScrollingData]">
            <Children>
              <Repeater Source="[Folder.Children]" Name="MyRepeater" ContentName="BaseItem" Layout="[MyLayout]" DiscardOffscreenVisuals="false" >
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.75" RelativeTo="Final"  />
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
            <LayoutInput>
              <FormLayoutInput Horizontal="Fill" Vertical="Fill"/>
            </LayoutInput>
          </Scroller>
        </Children>
      </Panel>
    </Content>
    <Content Name="BaseItem">

      <!--[Folder.ActualThumbSize]-->

      <me:PosterViewItem ImageSize="[Folder.ActualThumbSize]" AnimDelay="[AnimDelay]" NavCount="[NavCount]" ThemeHelper="[ThemeHelper]"
                          ShowLabels="[Folder.DisplayPrefs.ShowLabels]" Application="[Application]" Index="[RepeatedItemIndex]"
                          Item="[RepeatedItem!lib:Item]" ParentItem="[Folder]" TopLabelFont="[TopLabelFont]"
                          LabelFont="[LabelFont]" UnwatchedCountFont="[UnwatchedCountFont]" />
    </Content>
  </UI>

  <UI Name="PosterViewItem" BaseUI="ib:ItemButton">
    <Properties>
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <lib:Item Name="Item" Item="$Required"/>
      <a:Application Name="Application" Application="$Required"/>
      <BooleanChoice Name="ShowLabels" BooleanChoice="$Required" />
      <lib:SizeRef Name="ImageSize" SizeRef="$Required"/>
      <Index Name="Index" Index="$Required"/>
      <Image Name="FocusImage" Image="image://i:ZoomPane"/>
      <Image Name="FolderImage" Image="image://i:Folder"/>
      <Image Name="BlankImage" Image="null"/>
      <Size Name="MinSize" />
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
      <cor:Int32 Name="AnimDelay" Int32="1000" />
      <Font Name="TopLabelFont" Font="$Required"/>
      <Font Name="LabelFont" Font="$Required"/>
      <Font Name="UnwatchedCountFont" Font="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" />
    </Properties>

    <Locals>
      <Timer Name="AnimTimer" Interval="[AnimDelay]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
      <Size Name="GlowSize" Size="40,40" />
    </Locals>

    <Rules>

      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>
      <Binding Source="[ParentItem.DisplayPrefs.UseBanner.Value]" Target="[Item.PreferBanner]" />
      <Binding Source="[ImageSize.Value]" Target="[Item.PreferredImageSmallSize]" />
      <Binding Source="[ShowLabels.Value]" Target="[BelowLabelPanel.Visible]" />
      <Binding Source="[Item.PreferredImageSmall]" Target="[BoxArt.Content]"/>
      <Binding Source="[Item.ThumbnailImage]" Target="[ThumbArt.Content]"/>
      <Binding Source="[Item.UnwatchedCountString]" Target="[UnwatchedCount.Content]" />
      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />
      <Binding Source="[Item.ShowUnwatched]" Target="[UnwatchedIndicator.Visible]" />
      <Binding Source="[Item.IsMissing]" Target="[MissingIndicator.Visible]" />
      <Binding Source="[Item.IsFuture]" Target="[FutureIndicator.Visible]" />
      <Binding Source="[Item.Name]" Target="[BelowLabelPanel.Content]" />
      <Binding Source="[Item.Name]" Target="[Label.Content]" />

      <!-- MAIN IMAGE SELECTOR -->
      <Condition Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="Equals" SourceValue="Poster" Target="[BoxArt.Visible]" Value="true" />
      <Condition Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="NotEquals" SourceValue="Poster" Target="[BoxArt.Visible]" Value="false" />
      <Condition Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="Equals" SourceValue="ThumbArt" Target="[ThumbArt.Visible]" Value="true" />
      <Condition Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="NotEquals" SourceValue="ThumbArt" Target="[ThumbArt.Visible]" Value="false" />

      <Changed Source="[ImageSize]" InitialEvaluate="true" >
        <Actions>
          <Set Target="[GlowSize.Height]" Value="[Item.PreferredImageSmallSize.Height]" >
            <Transformer>
              <MathTransformer DivideInt="8"/>
            </Transformer>
          </Set>
          <Set Target="[GlowSize.Width]" Value="[Item.PreferredImageSmallSize.Height]" >
            <Transformer>
              <MathTransformer DivideInt="5"/>
            </Transformer>
          </Set>
        </Actions>
      </Changed>

      <Condition Source="[Item.ParentalAllowed]" ConditionOp="Equals" SourceValue="false" Target="[PCLock.Visible]" Value="true" />

      <Changed Source="[Item.HaveWatched]">
        <Conditions>
          <Equality Source="[Application.Config.ShowWatchTickInPosterView]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>
      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>

      <Changed Source="[Item.ShowUnwatched]">
        <Actions>
          <Set Target="[UnwatchedCount.Content]" Value="[Item.UnwatchedCountString]" />
        </Actions>
      </Changed>
      <Default Target="[Label.Visible]" Value="true">
        <Conditions>
          <Equality Source="[Item.HasPreferredImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />
        </Conditions>
      </Default>
      <Changed Source="[Item.HasPreferredImage]">
        <Conditions>
          <Equality Source="[ShowLabels.Value]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[Label.Visible]" Value="[Item.HasPreferredImage]">
            <Transformer>
              <BooleanTransformer Inverse="true"/>
            </Transformer>
          </Set>
        </Actions>
      </Changed>

      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[ConstraintPanel.ColorFilter]" Value="White" />
      <Condition Source="[Application.Config.DimUnselectedPosters]" ConditionOp="Equals" SourceValue="false" Target="[ConstraintPanel.Alpha]" Value="1" />

      <!-- IF MAIN IMAGE IS THUMBNAIL CHOICE AND HAS THUMB IMAGE AVAILABLE-->
      <Condition Source="[InFocus.Value]" ConditionOp="Equals" SourceValue="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="NotEquals" Value="Poster" />
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[MainPanel.Scale]" Value="[ParentItem.PosterZoom]"/>
          <Set Target="[BoxItem.Alpha]" Value="1"/>
          <Set Target="[BoxItem.Content]" Value="color://s:PosterZoomBackground"/>
          <Set Target="[ThumbArt.Content]" Value="[Item.ThumbnailImage]"/>
          <Set Target="[ConstraintPanel.ColorFilter]" Value="White" />
          <Set Target="[ConstraintPanel.Alpha]" Value="1" />
        </Actions>
      </Condition>

      <Changed Source="[Item.ThumbnailImage]">
        <Conditions>
          <Equality  Source="[InFocus.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Item.ThumbnailImage]"/>
        </Actions>
      </Changed>
      <Binding Target="[ThumbArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>

      <Condition Source="[InFocus.Value]" SourceValue="false">
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Item.ThumbnailImage]"/>
        </Actions>
      </Condition>
      <!-- END MAIN IMAGE AS THUMBNAIL-->

      <!-- IF MAIN IMAGE IS THUMBNAIL CHOICE AND DOES NOT HAVE A THUMB IMAGE AVAILABLE-->
      <Condition Source="[InFocus.Value]" ConditionOp="Equals" SourceValue="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="NotEquals" Value="Poster" />
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[Item.HasThumbnailImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Item.HasBackdropImage]" ConditionOp="Equals" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[MainPanel.Scale]" Value="[ParentItem.PosterZoom]"/>
          <Set Target="[BoxItem.Alpha]" Value="1"/>
          <Set Target="[BoxItem.Content]" Value="color://s:PosterZoomBackground"/>
          <Set Target="[ThumbArt.Content]" Value="[Item.BackdropImage]"/>
          <Set Target="[ConstraintPanel.ColorFilter]" Value="White" />
          <Set Target="[ConstraintPanel.Alpha]" Value="1" />
        </Actions>
      </Condition>

      <Changed Source="[Item.BackdropImage]">
        <Conditions>
          <Equality  Source="[InFocus.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Item.BackdropImage]"/>
        </Actions>

      </Changed>
      <Binding Target="[ThumbArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>

      <Condition Source="[InFocus.Value]" SourceValue="false">
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Item.BackdropImage]"/>
        </Actions>
      </Condition>
      <!-- END MAIN IMAGE AS THUMBNAIL-->

      <!-- IF MAIN IMAGE IS POSTER CHOICE-->
      <Condition Source="[InFocus.Value]" ConditionOp="Equals" SourceValue="true">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="Equals" Value="Poster" />
          <Equality Source="[ThemeHelper.Config.FolderMainArtList]" ConditionOp="NotEquals" Value="ThumbArt" />
        </Conditions>
        <Actions>
          <Set Target="[MainPanel.Scale]" Value="[ParentItem.PosterZoom]"/>
          <Set Target="[BoxItem.Alpha]" Value="1"/>
          <Set Target="[BoxItem.Content]" Value="color://s:PosterZoomBackground"/>
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImage]"/>
          <Set Target="[ConstraintPanel.ColorFilter]" Value="White" />
          <Set Target="[ConstraintPanel.Alpha]" Value="1" />
        </Actions>
      </Condition>

      <Changed Source="[Item.PreferredImage]">
        <Conditions>
          <Equality  Source="[InFocus.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImage]"/>
        </Actions>
      </Changed>

      <Binding Target="[BoxArt.MaintainAspectRatio]" Source="[Item.SmallImageIsDistorted]">
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>

      <Condition Source="[InFocus.Value]" SourceValue="false">
        <Actions>
          <Set Target="[BoxArt.Content]" Value="[Item.PreferredImageSmall]"/>
        </Actions>
      </Condition>
      <!-- END MAIN IMAGE AS THUMBNAIL-->

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
          <Set Target="[InFocus.Value]" Value="false"/>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[AnimTimer.Start]" />
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
        </Actions>
      </Changed>

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>

      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel.MaximumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[BelowLabelPanel.MaximumSize]" />
      <Binding Source="[ImageSize.Value]" Target="[ConstraintPanel.MinimumSize]" />
      <Binding Source="[Item.IsFavorite]" Target="[FavIndicator.Visible]" />
      <Binding Source="[Item.IsHD]" Target="[HDIndicator.Visible]"  ConditionLogicalOp="And"  >
        <Conditions>
          <Equality Source="[Application.Config.ShowHDIndicatorOnPosters]" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[Item.IsRemoteContent]" Target="[RemoteContentImage.Visible]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Application.Config.ShowRemoteIndicatorOnPosters]" Value="true" />
        </Conditions>
      </Binding>
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="720" Target="[HDImage.Content]" Value="image://i:HDLogo720" />
      <Condition Source="[Item.HDType]" ConditionOp="Equals" SourceValue="1080" Target="[HDImage.Content]" Value="image://i:HDLogo1080" />
    </Rules>

    <Content>

      <Graphic Name="MainPanel" Content="[BlankImage]" Scale="1.0,1.0,1.0" SizingPolicy="SizeToChildren">
        <Animations>
          <Animation Loop="0" CenterPointPercent="0.5,0.5,1.0" Type="Scale">
            <Keyframes>
              <ScaleKeyframe Time="0.00" RelativeTo="Current" Interpolation="EaseOut"/>
              <ScaleKeyframe Time="0.15" RelativeTo="Final"/>
            </Keyframes>
          </Animation>
        </Animations>
        <Children>
          <ColorFill Name="BoxItem" Content="Transparent" Alpha="1" Padding="0,0,0,0" >
            <Layout>
              <AnchorLayout SizeToHorizontalChildren="true" SizeToVerticalChildren="true"/>
            </Layout>

            <Children>

              <ColorFill Content="Transparent" >
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Center" ContributesToWidth="true"/>
                </LayoutInput>
                <Layout>
                  <FlowLayout Orientation="Vertical" ItemAlignment="Center"/>
                </Layout>
                <Children>
                  <Text Name="BelowLabelPanel" Margins="0,5,0,-3" Alpha="1" Color="color://s:FontColorLight"  Font="[TopLabelFont]" Content="[Item.Name]" WordWrap="false" HorizontalAlignment="Near">
                  </Text>
                  <Panel Name="ConstraintPanel" Padding="0,0,0,0" MaximumSize="[ImageSize.Value]" MinimumSize="[ImageSize.Value]" ColorFilter="color://s:DimPosterFilter" Alpha="global://s:PosterDimAlpha" >
                    <Layout>
                      <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
                    </Layout>
                    <Children>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Application.Config.ShowWatchTickInPosterView]" MaximumSize="42,42" Margins="5,5,0,0">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Panel Name="TickPanel" Layout="Center">
                            <Children>
                              <Graphic Content="image://i:Watched"  MaximumSize="40,40"  />
                            </Children>
                          </Panel>
                        </Children>
                      </Panel>

                      <Panel  Margins="2,2,0,0" Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Name="UnwatchedIndicator" MaximumSize="42,42" >
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Text Name="UnwatchedCount" Content="" Color="color://s:FontColorLight" Font="[UnwatchedCountFont]" Margins="0,0,0,0"></Text>
                          <Graphic Visible="global://s:ShowWatchedMarkerBackgrounds" Content="image://i:GreenCircle"  MinimumSize="40,40" MaximumSize="40,40" MaintainAspectRatio="true" Layout="Center" ></Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="HDIndicator">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="HDImage" Content="image://i:HDLogo" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="MissingIndicator">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FutureIndicator">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="75,75" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FavIndicator">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="FavImage" Content="image://i:Heart" Margins="0,0,5,5" MaximumSize="48,35" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="PCLock">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Far"/>
                        </LayoutInput>
                        <Children>
                          <Graphic Name="PCLockImage" Content="image://i:Lock" Margins="0,0,5,5" MaximumSize="30,30" MaintainAspectRatio="true">
                            <LayoutInput>
                              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                            </LayoutInput>
                          </Graphic>
                        </Children>
                      </Panel>
                      <Graphic Name="RemoteContentImage" Content="resx://MediaBrowser/MediaBrowser.Resources/IconRemote" Margins="0,0,5,5" Alpha=".75" MaximumSize="30,30" MaintainAspectRatio="true" Visible="false">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Far" Vertical="Far"/>
                        </LayoutInput>
                      </Graphic>
                      <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Fill" Vertical="Fill"/>
                        </LayoutInput>
                        <Children>
                          <Text Alpha="1" Name="Label" Visible="false" Color="color://s:FontColorLight" Font="[LabelFont]"
														Content="[Item.Name]"  WordWrap="true" Margins="5,5,5,5"  HorizontalAlignment="Center">

                          </Text>
                        </Children>
                      </Panel>
                      <Graphic  Name="ThumbArt"  Scale="1,1,1" Padding="0,0,0,0" SizingPolicy="SizeToConstraint"  MaintainAspectRatio="true" >
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Center"/>
                        </LayoutInput>
                      </Graphic>

                      <Graphic  Name="BoxArt"  Scale="1,1,1" Padding="0,0,0,0" SizingPolicy="SizeToConstraint"  MaintainAspectRatio="true" >
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Center"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                </Children>

              </ColorFill>

            </Children>
          </ColorFill>

        </Children>
      </Graphic>
    </Content>
  </UI>
</Mcml>