<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor="assembly://MSCorLib/System"
    xmlns:a="assembly://MediaBrowser/MediaBrowser"
    xmlns:lib="assembly://MediaBrowser/MediaBrowser.Library"
    xmlns:ib="resx://Xenon/Xenon.Resources/ItemButton"
    xmlns:xs="file://Xenon_Styles.mcml"
    xmlns:s="file://Styles_DoNotEdit.mcml"
	  xmlns:f="file://Fonts_DoNotEdit.mcml"
    xmlns:sounds="resx://MediaBrowser/MediaBrowser.Resources/Sounds"
    xmlns:i="resx://MediaBrowser/MediaBrowser.Resources/Images"
    xmlns:xi="resx://Xenon/Xenon.Resources/Images"
	  xmlns:bd="resx://Xenon/Xenon.Resources/Backdrop"
    xmlns:mpaa="resx://Xenon/Xenon.Resources/MPAARating"
    xmlns:mip="resx://MediaBrowser/MediaBrowser.Resources/MediaInfoPanel"
    xmlns:sr="resx://Xenon/Xenon.Resources/StarRating"
    xmlns:lv="resx://Xenon/Xenon.Resources/LabelValue"
    xmlns:st="resx://Xenon/Xenon.Resources/AutoScrollableText"
    xmlns:anim="resx://Xenon/Xenon.Resources/Animations"
    xmlns:xh="assembly://Xenon/Xenon"
    xmlns:me="me" >

  <UI Name="XenonLayoutDetails">
    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" XenonHelper="$Required"/>
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <IntRangedValue Name="SelectRepeaterIndex"/>
      <Timer Name="InfoTimer" AutoRepeat="false" Interval="400" Enabled="false"/>
      <BooleanChoice Name="HasFocus" Value="false" />
    </Locals>

    <Rules>

      <Binding Target="[ThemeHelper.CurrentItem]" Source="[SelectedItem]" />
      <Binding Target="[Application.CurrentItem]" Source="[SelectedItem]" />

      <!-- Folder Pref Backdrop -->
      <Binding Source="[Folder.SelectedChild.BackdropImage]" Target="[Backdrop.Image]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>
      <Binding Source="[Folder.SelectedChild]" Target="[Backdrop.Item]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdrop]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Backdrop Overlay-->
      <Binding Target="[Overlay.Visible]"   Source="[ThemeHelper.Config.FolderShowBackdropOverlay]">
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderShowBackdropOverlay]" ConditionOp="Equals" Value="true" />
        </Conditions>
      </Binding>

      <!-- Overview/List Items Visiblity/Content -->
      <!--<Binding Source="[SelectedItem.Overview]" Target="[Overview.Content]" />

      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.Config.FolderInfoDisplay]" ConditionOp="Equals" Value="Overview" />
        </Conditions>
        <Actions>
          <Set Target="[Overview.Visible]" Value="true" />
          <Set Target="[ItemsTextList.Visible]" Value="false" />
          <Set Target="[ItemsThumbList.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelper.Config.FolderInfoDisplay]" ConditionOp="Equals" Value="Text List" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[SelectedFolder]" InvokePolicy="Synchronous" />
          <Set Target="[ItemsTextList.Folder]" Value="[SelectedFolder]" />
          <Set Target="[ItemsTextList.Visible]" Value="true" />
          <Set Target="[Overview.Visible]" Value="false" />
          <Set Target="[ItemsThumbList.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[SelectedItem.IsFolder]" ConditionOp="Equals" Value="true" />
          <Equality Source="[ThemeHelperConfig.FolderInfoDisplay]" ConditionOp="Equals" Value="Thumb List" />
        </Conditions>
        <Actions>
          <Invoke Target="[ThemeHelper.LoadDisplayPrefs]" folder="[SelectedFolder]" InvokePolicy="Synchronous" />
          <Set Target="[ItemsThumbList.Folder]" Value="[SelectedFolder]" />
          <Set Target="[ItemsThumbList.Visible]" Value="true" />
          <Set Target="[ItemsTextList.Visible]" Value="false" />
          <Set Target="[Overview.Visible]" Value="false" />
        </Actions>
      </Rule>-->

      <!--Force focus to scroller-->
      <Changed Source="[InfoTimer.Tick]" ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" ConditionOp="Equals" Value="false" />
          <Equality Source="[ThemeHelper.IsMenuOpen]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Invoke Target="[ListItems.NavigateInto]"></Invoke>
        </Actions>
      </Changed>

      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[HasFocus.Value]" Value="true"/>
        </Actions>
      </Changed>
      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[HasFocus.Value]" Value="false"/>
        </Actions>
      </Changed>
      
      <!--ITEM COUNTER-->
      <Binding Source="[Folder.SelectedChildIndex.ToString]" Target="[List_Counter.Content]" >
        <Transformer>
          <MathTransformer Add="1"/>
        </Transformer>
      </Binding>
      
      <Binding Source="[Folder.Children.Count]" Target="[List_Total.Content]" >
        <Transformer>
          <FormatTransformer Format="| {0}" />
        </Transformer>
      </Binding>

      <Binding Source="[Folder.SelectedChild]" Target="[MediaInfoPanel.Item]" />
      <Binding Target="[Summary.Text]" Source="[Folder.SelectedChild.Overview]"></Binding>
      <Binding Source="[Folder.SelectedChild.ImdbRating]" Target="[StarRating.Value]"></Binding>
      <Binding Source="[Folder.SelectedChild.RunningTimeString]" Target="[SideInfo.Value]"></Binding>
      <Binding Source="[Folder.SelectedChild.OfficialRating]" Target="[mpaa.Value]"></Binding>

      <Default Value="Runs " Target="[SideInfo.Label]"></Default>

      <Binding Source="[ThemeHelper.EndTime]" Target="[SideInfo1.Value]"></Binding>
      <Default Value=" Ends " Target="[SideInfo1.Label]"></Default>
      
      <!--LOGO'S LOGIC
      <Binding Target="[Title.Content]"       Source="[Folder.SelectedChild.Name]"/>
      <Binding Target="[LogoImage.Content]" Source="[Folder.SelectedChild.LogoImage]"/>

      <Rule>
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode"/>
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
        </Actions>
      </Rule>
      <Default Target="[LogoImage.Visible]" Value="false"/>
      <Default Target="[Title.Visible]" Value="true"/>-->

      <!-- Thumb Art Images-->
      <Binding Source="[Folder.SelectedChild.ThumbnailImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.ThumbnailImage]" />
        </Actions>
      </Binding>

      <Binding Source="[Folder.SelectedChild.PrimaryImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="true"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="Equals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.PrimaryImage]" />
        </Actions>
      </Binding>
      
      <Binding Source="[Folder.SelectedChild.BackdropImage]" Target="[ThumbArt.Content]">
        <Conditions>
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[ThumbArt.Content]" Value="[Folder.SelectedChild.BackdropImage]" />
        </Actions>
      </Binding>

      <!-- Conditions for Title or Fanart views-->
      <Binding Source="[Folder.SelectedChild.Name]" Target="[Title.Content]" />
      <Binding Source="[Folder.SelectedChild.LogoImage]" Target="[LogoImage.Content]" />
      <Binding Source="[Folder.SelectedChild.ArtImage]" Target="[ClearArtImage.Content]" />
      <Binding Source="[Folder.SelectedChild.ThumbnailImage]" Target="[ThumbnailImage.Content]" />

      <!--Logos-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="Logo" />
          <Equality Source="[Folder.SelectedChild.HasLogoImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ClearArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[Folder.SelectedChild.HasArtImage]" ConditionOp="Equals" Value="true" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ClearArt" />
          <Equality Source="[Folder.SelectedChild.HasArtImage]" ConditionOp="Equals" Value="false" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ClearArtImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <!--ThumbNailArt-->
      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="True"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="true" />
          <Set Target="[Title.Visible]" Value="false" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[ThemeHelper.Config.FolderClearLogosList]" ConditionOp="Equals" Value="ThumbArt" />
          <Equality Source="[Folder.SelectedChild.HasThumbnailImage]" ConditionOp ="Equals" Value="false"/>
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Season" />
          <Equality Source="[Folder.SelectedChild.ItemTypeString]" ConditionOp="NotEquals" Value="Episode" />
        </Conditions>
        <Actions>
          <Set Target="[ThumbnailImage.Visible]" Value="false" />
          <Set Target="[Title.Visible]" Value="true" />
          <Set Target="[LogoImage.Visible]" Value="false" />
          <Set Target="[ClearArtImage.Visible]" Value="false" />
        </Actions>
      </Rule>

      
    </Rules>
    <Content>

      <Panel Layout="Form" >
        <Children>

          <Panel Name="CounterPanel">
            <LayoutInput>
              <FormLayoutInput Top="Parent,1,-43" Bottom="Parent,1,0" Right="Parent,1,-25"/>
            </LayoutInput>
            <Children>
              <Panel Name="CounterPosition" Layout="HorizontalFlow">
                <Children>
                  <Text Name="List_Counter" Content="0" Color="color://xs:counterColor" Font="font://xs:counterFont" />
                  <Text Name="List_Total" Content="0" Color="color://xs:totalCounterColor" Font="font://xs:totalCounterFont"/>
                </Children>
              </Panel>
            </Children>
          </Panel>

          <Panel Name="ThumbnailPanel" Navigation="None" Rotation="30deg;0,1,0">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0.72" Top="Parent,0,275" />
            </LayoutInput>
            <Children>
              <Graphic Name="ThumbArt" Alpha="0.7" MaximumSize="0,200" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" Content="[Folder.SelectedChild.ThumbnailImage]" />
            </Children>
          </Panel>

          <!--<Panel Name="PreThumbnailPanel" Navigation="None" Rotation="30deg;0,1,0">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0.3" Top="Parent,0,200" />
            </LayoutInput>
            <Children>
              <Graphic Name="PreThumbArt" MaximumSize="0,200" SizingPolicy="SizeToConstraint" MaintainAspectRatio="true" Content="[Folder.SelectedChild.ThumbnailImage]" />
            </Children>
          </Panel>-->

          <Panel Name="ListPanel">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0" Top="Parent,0,80" Right="Parent,1" Bottom="Parent,1" />
            </LayoutInput>
            <Children>
              <me:DetailQuickListScroller Name="ListItems" Application="[Application]" Folder="[Folder]" ThemeHelper="[ThemeHelper]" />
            </Children>
          </Panel>

          <Panel Name="InfoPanel">
            <LayoutInput>
                  <FormLayoutInput Top="Parent,0.45" Left="Parent,0.3" />
                </LayoutInput>
            <Children>
              <!--MOVIE DETAILS INCLUDING SYNOPSIS, DIRECTORS RUNTIME ETC-->
              <Graphic Name="OverviewPanel" Padding="30,15,15,-5">
                <Layout>
                  <FlowLayout Orientation="Horizontal" Spacing="20,20"/>
                </Layout>
                <LayoutInput>
                  <FormLayoutInput Horizontal="Fill" Vertical="Fill"/>
                </LayoutInput>
                <Children>
                  <ColorFill Margins="0,14,0,0" Content="Transparent">
                    <Layout>
                      <FlowLayout Orientation="Vertical" StripAlignment="Near"/>
                    </Layout>
                    <Children>
                      <Panel Layout="VerticalFlow" MaximumSize="480,300">
                        <LayoutInput>
                          <FormLayoutInput Top="Parent,0,200"  />
                        </LayoutInput>
                        <Children>
                          <Text Name="Title" Font="font://xs:FinalDetailsTitle" Color="color://xs:FinalDetailsTitleColor" Visible="false"/>
                          <Graphic Name="LogoImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="400,60" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                          <Graphic Name="ClearArtImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="250,0" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                          <Graphic Name="ThumbnailImage" Margins="0,0,0,5" MaintainAspectRatio="true" MaximumSize="250,0" Visible="false" CenterPointPercent="0.5,0.5,0.5"/>
                          <st:ScrollableText Name="Summary" Font="font://xs:OverviewFont" Color="color://xs:OverviewColor" />
                        </Children>
                      </Panel>
                    </Children>
                  </ColorFill>
                  
                  <Panel Layout="VerticalFlow" Margins="50,150,0,0" >
                    <Layout>
                      <FlowLayout Orientation="Vertical" StripAlignment="Near" ItemAlignment="Near"/>
                    </Layout>
                    <Children>
                      <lv:FinalLabelValue Name="TitleSupportlv"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv1"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv2"></lv:FinalLabelValue>
                      <lv:FinalLabelValue Name="TitleSupportlv3"></lv:FinalLabelValue>

                      <Panel Layout="HorizontalFlow" Name="RuntimeInfo" Visible="true">
                        <Children>
                          <lv:FinalLabelValue Name="SideInfo"></lv:FinalLabelValue>
                          <lv:FinalLabelValue Name="SideInfo1"></lv:FinalLabelValue>
                        </Children>
                      </Panel>
                      <sr:StarRating Margins="0,4,0,0" MaximumSize="0,20" Name="StarRating" ></sr:StarRating>
                      <mpaa:MPAARating Margins="0,7,0,0" MaximumSize="0,48" Name="mpaa" />
                    </Children>
                  </Panel>
                </Children>
              </Graphic>
            </Children>
          </Panel>

          
          <!--<Graphic Content="image://xi:RALBG" ColorFilter="color://xs:XC_RALPanelFilterColor" Alpha="global://xs:RALPanelAlpha">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent,0,-100" Right="Parent,1,100" Top="Parent,0,-20" Bottom="Parent,1,37"  />
            </LayoutInput>
          </Graphic>-->
          <mip:MediaInfoPanel Name="MediaInfoPanel" Item="[Folder.SelectedChild]" MaximumSize="0,45" >
            <LayoutInput>
              <FormLayoutInput Top="InfoPanel,1,20" Horizontal="Center" />
            </LayoutInput>
          </mip:MediaInfoPanel>
          
          
          
          <ColorFill Name="Overlay" Layout="Fill" Visible="[ThemeHelper.Config.FolderShowBackdropOverlay]" Alpha="0.4" Content="Black" />
          <!-- Backdrop -->
          <bd:Backdrop4 LoadDelay="280" FadeTime="0.3"  Application="[Application]" Name="Backdrop" Visible="[ThemeHelper.Config.FolderShowBackdrop]" Image="[Folder.BackdropImage]" Item="[Folder.SelectedChild]"/>

        </Children>
      </Panel>
      
      
    </Content>
  </UI>

  <UI Name="DetailQuickListScroller">

    <Properties>
      <a:Application Name="Application" Application="$Required"/>
      <lib:FolderModel Name="Folder" FolderModel="$Required"/>
      <xh:XenonHelper Name="ThemeHelper" XenonHelper="$Required" />
    </Properties>

    <Locals>
      <lib:Item Name="SelectedItem" Item="[Folder.SelectedChild]" />
      <!-- DETAILS SCROLLING DATA  -->
      <ScrollingHandler HandleDirectionalKeys="true" HandleHomeEndKeys="true" HandleMouseWheel="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Bubbled" Name="DetailsSH"/>
      <ScrollingData Name="DetailsSD" LockedAlignment="0.1" LockedPosition="0.1"  />
      
      <FlowLayout Name="Layout" Orientation="Vertical" AllowWrap="true" RepeatGap="30,0" Spacing="10,10"/>
      <IntRangedValue Name="SelectRepeaterIndex"/>
      <ShortcutHandler Name="JumpForward" Shortcut="SkipForward" HandlerStage="Bubbled" Handle="true" />
      <ShortcutHandler Name="JumpBack" Shortcut="SkipBack" HandlerStage="Bubbled" Handle="true"/>

      <cor:Int32 Name="InfoTimer" Int32="1000" />
      <IntRangedValue Name="NavCount" Value="0" />

      <Command Name="ScrollUp"/>
      <Command Name="ScrollDown"/>
    </Locals>

    <Rules>

      <!-- Set the UI to be mouse and keyboard interactive. -->
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <!-- WRAP EHS VF LIST LOGIC -->
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Always" Target="[Layout.Repeat]" Value="Always" />
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="Never" Target="[Layout.Repeat]" Value="Never" />
      <Condition Source="[ThemeHelper.Config.FolderWrapItemList]" ConditionOp="Equals" SourceValue="When Too Big" Target="[Layout.Repeat]" Value="WhenTooBig" />


      <!--Navigate to First Unwatched-->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Application]" InitialEvaluate="true"/>
          <Equality Source="[Application.NavigatingForward]" Value="true"/>
          <Equality Source="[Folder.Children.Count]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsRepeater.NavigateIntoIndex]"  index="[Folder.FirstUnwatchedIndex]"/>
        </Actions>
      </Rule>
      
      

      <!-- DETAILS Give ScrollingData to ScrollingHandler. -->
      <Binding Target="[DetailsSH.ScrollingData]" Source="[DetailsSD]"/>
      <Default Target="[DetailsSD.Repeater]" Value="[DetailsRepeater]"/>
      <Binding Source="[Layout]" Target="[DetailsRepeater.Layout]"/>
      
      
      <!--<Changed Source="[Folder.SelectedChildIndex]" ConditionLogicalOp="And">
                <Conditions>
                    <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="NotEquals" Value="-1" />
                    <Equality Source="[Folder.SelectedChildIndex]" ConditionOp="Equals" Value="0" />
                </Conditions>
                <Actions>
                    <Set Target="[Folder.SelectedChildIndex]" Value="[Folder.Children.Count]">
                        <Transformer>
                            <MathTransformer SubtractInt="1" />
                        </Transformer>
                    </Set>
                  <Invoke Target="[CoverFlowSD.ScrollDown]"/>
                </Actions>
            </Changed>-->

      <Changed Source="[Folder.JILShift]">
        <Actions>
          <Invoke Target="[DetailsSD.Scroll]"  amount="[Folder.JILShift]"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <Modified Source="[JumpForward.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsSD.PageDown]"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Modified Source="[JumpBack.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DetailsSD.PageUp]"/>
        </Actions>
      </Rule>
    </Rules>

   
    <Content>
      <Panel Layout="Form">
        <Children>
          <!-- List Repeater -->
          <Scroller Orientation="Vertical" Name="DetailsScroller" ScrollingData="[DetailsSD]" Navigation="Column,RememberFocus" FadeSize="15"  >
            <LayoutInput>
              <AnchorLayoutInput Name="ListPosition" Bottom="Parent,1, -110" Top="Parent,0.1" Left="Parent,0" Right="Parent,0.3" />
            </LayoutInput>
            <Children>
              <Repeater Source="[Folder.Children]" Name="DetailsRepeater" Layout="[Layout]" >
                <Layout>
                  <FlowLayout Orientation="Vertical"  Spacing="10,5" />
                </Layout>
                <Content>
                  <me:ListItems Application="[Application]"
                                ParentItem="[Folder]"
                                Item="[RepeatedItem!lib:Item]"
                                Index="[RepeatedItemIndex]"
                                InfoTimer="[InfoTimer]" NavCount="[NavCount]"
                                SelectRepeaterIndex="[SelectRepeaterIndex]" />
                        
                </Content>
                <Animations>
                  <Animation Type="Move">
                    <Keyframes>
                      <PositionKeyframe Time="0" RelativeTo="Current" Interpolation="EaseIn, 1.0, 0.25"/>
                      <PositionKeyframe Time="0.65" RelativeTo="Final"/>
                    </Keyframes>
                  </Animation>
                </Animations>
              </Repeater>
            </Children>
          </Scroller>
          
        </Children>
      </Panel>
    </Content>
  </UI>

  

  <UI Name="ListItems">
    <Properties>
      <a:Application Name="Application" Application="$Required" />
      <lib:FolderModel Name="ParentItem" FolderModel="$Required"/>
      <lib:Item Name="Item" Item="$Required" />
      <Index Name="Index" Index="$Required"/>
      <cor:Int32 Name="InfoTimer" Int32="1000" />
      <IntRangedValue Name="SelectRepeaterIndex" IntRangedValue="$Required"/>
      <IntRangedValue Name="NavCount" IntRangedValue="$Required" />
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker"/>
      <xh:XenonHelper Name="ThemeHelper" CurrentItem="[Item]" />
      <Timer Name="AnimTimer" Interval="[InfoTimer]" Enabled="false" AutoRepeat="false"/>
      <BooleanChoice Name="InFocus" Value="false" />
    
    <KeyHandler Name="WatchedShortcut" Handle="true" Key="W" Modifiers="Control" HandlerStage="Bubbled"/>
    <ShortcutHandler Name="ClearBtn" Handle="true" Shortcut="Clear" HandlerStage="Bubbled" />
    </Locals>


    <Rules>
      
       <!-- Watched Toggle Commands -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[ClearBtn.Invoked]"/>
          <Modified Source="[WatchedShortcut.Invoked]"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="sound://sounds:Miniselect" />
          <Invoke Target="[Item.ToggleWatched]"/>
        </Actions>
      </Rule>

      <Default Target="[Input.KeyInteractive]" Value="true"/>
      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

      <Binding Source="[Item.BannerImage]" Target="[Banner.Content]" />
      <Binding Target="[Title.Content]" Source="[Item.Name]" />

      <Changed Source="[ParentItem.DisplayPrefs.UseBanner.Value]" >
        <Actions>
          <Set Target="[Banner.Visible]" Value="[ParentItem.DisplayPrefs.UseBanner.Value]" />
        </Actions>
      </Changed>
      
      <Changed Source="[Input.KeyFocus]" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[Banner.ColorFilter]" Value="White" />
          <Invoke Target="[Banner.AttachAnimation]" animation="animation://anim:DetailsFocusGained" />
          <!--<Set Target="[Banner.Scale]" Value="1.1,1.1,1" />-->
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
          <Invoke Target="[AnimTimer.Start]" />
        </Actions>
      </Changed>
      
      <Changed Source="[Input.KeyFocus]">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false"></Equality>
        </Conditions>
        <Actions>
          <Invoke Target="[Banner.AttachAnimation]" animation="animation://anim:DetailsFocusLost" />
        <Set Target="[Banner.Scale]" Value="1,1,1" />
        </Actions>
      </Changed>

      <!--<Changed Source="[Input.KeyFocus]" InitialEvaluate="true" >
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" />
          <Equality Source="[ParentItem.DisplayPrefs.UseBanner.Value]" ConditionOp="Equals" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[Title.Content]" Value="[Item.Name]" />
          <Set Target="[Title.Font]" Value="font://xs:XF_DQLSelected" />
          <Set Target="[Title.Color]" Value="color://xs:XC_DQLHighlighted"/>
          <Set Target="[TickPanel.Margins]" Value="2,15,0,-5" />
          <Set Target="[ParentItem.SelectedChildIndex]" Value="[Index.SourceValue]"/>
          <Invoke Target="[AnimTimer.Start]" />
        </Actions>
      </Changed>-->

      <Changed Source="[AnimTimer.Tick]">
        <Actions>
          <Set Target="[InFocus.Value]" Value="true"/>
          <Set Target="[NavCount.Value]" Value="0" ExclusiveApply="false"/>
        </Actions>
      </Changed>

      
      <Condition Source="[ParentItem.SelectedChildIndex]" ConditionOp="NotEquals" SourceValue="[Index.SourceValue]">
        <Actions>
          <Invoke Target="[AnimTimer.Stop]" />
          <Set Target="[NavCount.Value]" Value="[NavCount.Value]" ExclusiveApply="false">
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Set>
        </Actions>
      </Condition>

      <Binding Source="[Item.HaveWatched]" Target="[TickPanel.Visible]" />

      <Changed Source="[Application.Config.ShowWatchedTickOnFolders]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="false" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchedTickOnFolders]" />
        </Actions>
      </Changed>

      <Changed Source="[Application.Config.ShowWatchTickInPosterView]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Item.IsPlayable]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[TickIndicatorPanel.Visible]" Value="[Application.Config.ShowWatchTickInPosterView]" />
        </Actions>
      </Changed>
      <Binding Source="[Item.IsMissing]" Target="[MissingIndicator.Visible]" />
      <Binding Source="[Item.IsFuture]" Target="[FutureIndicator.Visible]" />

      <Changed Source="[Clicker.Invoked]">
        <Actions>
          <!--PlaySound Sound="sound://sounds:Miniselect" /-->
          <Invoke Target="[Application.Navigate]" item="[Item]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>
      <Panel Name="Bg" >
        <Children>

          <Panel Name="BannerPanel">
            <Children>

              <Panel  Scale="1,1,1" Padding="0,0,0,0" Layout="Center" Alpha="0.8" Name="TickIndicatorPanel" Visible="[Application.Config.ShowWatchTickInPosterView]" MaximumSize="42,42" Margins="5,5,0,0">
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                </LayoutInput>
                <Children>
                  <Panel Name="TickPanel" Layout="Center">
                    <Children>
                      <Graphic Content="image://i:Watched"  MaximumSize="40,40"  />
                    </Children>
                  </Panel>
                </Children>
              </Panel>

              <Clip Layout="Anchor" Navigation="Column, RememberFocus" Name="ItemDetails"  >
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0" Top="Parent,0" Right="Parent,1" Bottom="Parent,1"/>
                </LayoutInput>
                <Children>

                  <Text Name="Title" Visible="false" WordWrap="false" Font="font://xs:XF_DQLUnselected" Margins="35,0,20,0" >
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent,0,20" Top="Parent,0,10" Right="Parent,0,400"/>
                    </LayoutInput>
                  </Text>

                  <Graphic Scale="1,1,1" Name="Banner" Visible="[ParentItem.DisplayPrefs.UseBanner.Value]"  MaintainAspectRatio="true" >
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent,0" Right="Parent,0,400"/>
                    </LayoutInput>
                  </Graphic>

                  <Panel  Scale="1,1,1" Margins="0,5,0,0" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="MissingIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="MissingImage" Content="image://i:MissingBanner" Margins="0,0,0,0" MaximumSize="45,45" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                  <Panel  Scale="1,1,1" Margins="0,5,0,0" Padding="0,0,0,0" Layout="Anchor" Visible="false" Name="FutureIndicator">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Far" Vertical="Near"/>
                    </LayoutInput>
                    <Children>
                      <Graphic Name="FutureImage" Content="image://i:FutureBanner" Margins="0,0,0,0" MaximumSize="45,45" MaintainAspectRatio="true">
                        <LayoutInput>
                          <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                        </LayoutInput>
                      </Graphic>
                    </Children>
                  </Panel>
                </Children>
              </Clip>
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>
  </UI>
</Mcml>
